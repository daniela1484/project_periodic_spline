# -*- coding: utf-8 -*-
"""Project1EsparzaDaniela.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1i2nCFipRebxrFfNWwO3FuvqcxNAXtv1M
"""

!pip install regressio --upgrade
from regressio.datagen import generate_random_walk

import numpy as np
import math
import matplotlib.pyplot as plt

# Input Data
x, y = np.asarray([0, (math.pi/6), (math.pi/3), (math.pi/2), (2*math.pi)/3, (5*math.pi)/6, math.pi]), np.asarray([0, 1/2, 87/100, 1, 87/100, 1/2, 0])

# Calculate
v = np.array([0, 1/2, 1/2, 87/100, 87/100, 1, 1, 87/100, 87/100, 1/2, 1/2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype = np.float64)
A = np.array([[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
              [(math.pow(math.pi,3))/216, (math.pow(math.pi,2))/36, math.pi/6, 1, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
              [0,0,0,0, (math.pow(math.pi, 3))/216, (math.pow(math.pi,2))/36, math.pi/6, 1, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
              [0,0,0,0, (math.pow(math.pi, 3))/27, (math.pow(math.pi, 2))/9, math.pi/3, 1, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0, (math.pow(math.pi, 3))/27, (math.pow(math.pi, 2))/9, math.pi/3, 1, 0,0,0,0,0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0, (math.pow(math.pi, 3))/8, (math.pow(math.pi, 2))/4, math.pi/2, 1, 0,0,0,0,0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0,0,0,0,0, (math.pow(math.pi, 3))/8, (math.pow(math.pi, 2))/4, math.pi/2, 1, 0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0,0,0,0,0, (8*math.pow(math.pi, 3))/27, (4*math.pow(math.pi, 2))/9, (2*math.pi)/3, 1, 0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, (8*math.pow(math.pi, 3))/27, (4*math.pow(math.pi, 2))/9, (2*math.pi)/3, 1, 0,0,0,0],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, (125*math.pow(math.pi, 3))/216, (25*math.pow(math.pi, 2))/36, (5*math.pi)/6, 1, 0,0,0,0],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, (125*math.pow(math.pi, 3))/216, (25*math.pow(math.pi, 2))/36, (5*math.pi)/6, 1],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, math.pow(math.pi, 3), math.pow(math.pi, 2), math.pi, 1],
              [(math.pow(math.pi, 2))/12, math.pi/3, 1, 0, (-1*math.pow(math.pi, 2))/12, (-1*math.pi)/3, -1, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
              [0,0,0,0, (math.pow(math.pi, 2))/3, (2*math.pi)/3, 1, 0, (-1*math.pow(math.pi, 2))/3, (-2*math.pi)/3, -1, 0,0,0,0,0,0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0, (3*math.pow(math.pi, 2))/4, math.pi, 1, 0, (-3*math.pow(math.pi, 2))/4, (-1*math.pi), -1, 0,0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0,0,0,0,0, (4*math.pow(math.pi, 2))/3, (4*math.pi)/3, 1, 0, (-4*math.pow(math.pi, 2))/3, (-4*math.pi)/3, -1, 0,0,0,0,0],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, (25*math.pow(math.pi, 2))/12, (5*math.pi)/3, 1, 0, (-25*math.pow(math.pi, 2))/12, (-5*math.pi)/3, -1, 0],
              [math.pi, 2, 0,0, (-1*math.pi), -2, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
              [0,0,0,0, 2*math.pi, 2, 0,0, (-2*math.pi), -2, 0,0,0,0,0,0,0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0, 3*math.pi, 2, 0,0, (-3*math.pi), -2, 0,0,0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0,0,0,0,0, 4*math.pi, 2, 0,0, (-4*math.pi), -2, 0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 5*math.pi, 2, 0,0, (-5*math.pi), -2, 0,0],
              [0,0, -1, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, (3*math.pow(math.pi, 2)), 2*math.pi, 1,0],
              [0, -2, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 6*math.pi, 2, 0,0]], dtype = np.float64)


# Calculates [a1,b1,c1,..., b6,c6,d6]' = inv(A) * v =
lines = np.dot(np.linalg.inv(A), v)#.reshape(-1, 4)

print(lines)